The roles/requirements.yml now contains the following content:

---
# requirements.yml

- src: git@workstation.lab.example.com:student/bash_env
  scm: git
  version: master
  name: student.bash_env





Use Ansible Galaxy to download and install the roles listed in the roles/requirements.yml file. Be sure that any downloaded roles 
are stored in the roles subdirectory.

#[student@workstation role-galaxy]$ ansible-galaxy install -r roles/requirements.yml -p roles

- extracting student.bash_env to /home/student/role-galaxy/roles/student.bash_env
- student.bash_env (master) was installed successfully




Change to the role-galaxy working directory.

[student@workstation ~]$ cd ~/role-galaxy
[student@workstation role-galaxy]$

Launch your favorite text editor and create a file called requirements.yml in the roles subdirectory. The URL of the role's Git repository is: git@workstation.lab.example.com:student/bash_env. To see how the role affects the behavior of production hosts, use the master branch of the repository. Set the local name of the role to student.bash_env.

The roles/requirements.yml now contains the following content:

---
# requirements.yml

- src: git@workstation.lab.example.com:student/bash_env
  scm: git
  version: master
  name: student.bash_env



Create a playbook, called use-bash_env-role.yml, that uses the student.bash_env role. The contents of the playbook should match the following:

---
- name: use student.bash_env role playbook
  hosts: devservers
  vars:
    default_prompt: '[\u on \h in \W dir]\$ '
  pre_tasks:
    - name: Ensure test user does not exist
      user:
        name: student2
        state: absent
        force: yes
        remove: yes

  roles:
    - student.bash_env

  post_tasks:
    - name: Create the test user
      user:
        name: student2
        state: present
        password: "{{ 'redhat' | password_hash('sha512', 'mysecretsalt') }}"





Update the roles/requirements.yml file, and set the version value to dev. The roles/requirements.yml file now contains:

---
# requirements.yml

- src: git@workstation.lab.example.com:student/bash_env
  scm: git
  version: dev
  name: student.bash_env




Edit the use-bash_env-role.yml file. Add the prompt_color variable with a value of blue to the vars section of the playbook. The file now contains:

---
- name: use student.bash_env role playbook
  hosts: devservers
  vars:
    prompt_color: blue
    default_prompt: '[\u on \h in \W dir]\$ '
  pre_tasks:
...output omitted...