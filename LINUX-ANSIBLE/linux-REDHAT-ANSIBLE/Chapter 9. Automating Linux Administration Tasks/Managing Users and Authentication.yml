'Managing Users and Authentication'



The User Module:

- name: Add new user to the development machine and assign the appropriate groups.
  user:
    name: devops_user 1
    shell: /bin/bash 2
    groups: sys_admins, developers 3
    append: yes


- name: Create a SSH key for user1
  user:
    name: user1
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_my_rsa





The Group Module:

The group module allows you to manage (add, delete, modify) groups on the managed hosts. You need to have groupadd, groupdel or groupmod. 
For windows targets, use the win_group module.

Example of the group module
- name: Verify that auditors group exists
  group:
    name: auditors
    state: present



[[[ SCENARION ]]]

Your organization requires that all hosts have the same local users available. These users should belong to the webadmin user group, which has the ability
to use the sudo command without specifying a password. Also, the users' SSH public keys should be distributed in the environment and the root user should not be allowed to log in using SSH directly.

You are tasked with writing a playbook to ensure that the users and user group are present on the remote host. The playbook must ensure the 
users can log in using the authorized SSH key, as well as use sudo without specifying a password, and that the root user can't log in directly using SSH.



The entire playbook now looks as follows:

---
- name: Create multiple local users
  hosts: webservers
  vars_files:
    - vars/users_vars.yml
  handlers:
  - name: Restart sshd
    service:
      name: sshd
      state: restarted

  tasks:

  - name: Add webadmin group
    group:
      name: webadmin
      state: present

  - name: Create user accounts
    user:
      name: "{{ item.username }}"
      groups: "{{ item.groups }}"
    loop: "{{ users }}"

  - name: Add authorized keys
    authorized_key:
      user: "{{ item.username }}"
      key: "{{ lookup('file', 'files/'+ item.username + '.key.pub') }}"
    loop: "{{ users }}"

  - name: Modify sudo config to allow webadmin users sudo without a password
    copy:
      content: "%webadmin ALL=(ALL) NOPASSWD: ALL"
      dest: /etc/sudoers.d/webadmin
      mode: 0440

  - name: Disable root login via SSH
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: "^PermitRootLogin"
      line: "PermitRootLogin no"
    notify: "Restart sshd"