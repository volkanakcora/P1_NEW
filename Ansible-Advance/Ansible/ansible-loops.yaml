# LOOPS
-
  name: Create users
  hosts: localhost
  tasks:
    - user: name="{{ item }}"     state=present uid= "{{ item.uid }}"
      loop:
        - name: joe
          udi: 1010
        - name: george
          uid: 1011
        - name: ravi
          uid: 1012

# Some other exmaples:
-
  name: Create users
  hosts: localhost
  tasks:
    - user: name="{{ item }}"     state=present 
      with_items:
        - name: joe
          udi: 1010
        - name: george
          uid: 1011
        - name: ravi
          uid: 1012

# view config files
-
  name: view config files
  hosts: localhost
  tasks:
    - debug: var= item  
      with_file:
        - "/etc/hosts"
          
        - "etc/resolv.conf"

# Get from multiple URLs

-
  name: Get from multiple URLs
  hosts: localhost
  tasks:
    - debug: var= item  
      with_url:
        - "https://site1.com/get/servers"
        - "https://site2.com/get/servers" 
        - "https://site3.com/get/servers"

# Check Multiple mongodbs

-
  name: Check multiple mongodbs
  hosts: localhost
  tasks:
    - debug: msg="DB={{ item.databse}} PID= {{ item.pid}}"
      with_mongodb:
        - database: dev
        - connection_string: "mongodb://dev.mongo/" 
        - database: prod
          connection_string: "mongodb://prod.mongo/"

          
# Ansible Loops
# The playbook currently runs an echo command to print a fruit name.
# Apply a loop directive (with_items) to the task to print all fruits defined in the 
# fruits variable.

-
    name: 'Print list of fruits'
    hosts: localhost
    vars:
        fruits:
            - Apple
            - Banana
            - Grapes
            - Orange
    tasks:
        -
            command: 'echo "{{item}}"'
            with_items: '{{ fruits }}'



# Ansible Loops
# To a more realistic use case.
# We are attempting to install multiple packages using yum module.
# The current playbook installs only a single package.



-
    name: 'Install required packages'
    hosts: localhost
    vars:
        packages:
            - httpd
            - binutils
            - glibc
            - ksh
            - libaio
            - libXext
            - gcc
            - make
            - sysstat
            - unixODBC
            - mongodb
            - nodejs
            - grunt
    tasks:
        -
            yum: 
                name: "{{ item }}"
                state: present
            with_items: "{{ packages }}"